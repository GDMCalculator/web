[{"name":"app.R","content":"library(shiny)\n\nrm(list = ls())\nshinyApp(\n  ui = fluidPage(\n    withMathJax(),\n    headerPanel(\"Gestational Diabetes Mellitus (GDM) Risk Score Calculator\"),\n    headerPanel(\"\"),\n    titlePanel(\"\"),\n    tags$style(\".fa-question-circle {color:#337ab7}\"),\n    tags$style(\".fa-spinner {color:#337ab7}\"),\n    ## -----------------------------------------\n    ## -----------------------------------------\n    tags$head(tags$style(HTML(\"\n    .progress-striped .bar {\n      background-color: #149bdf;\n      background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.6)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.6)), color-stop(0.75, rgba(255, 255, 255, 0.6)), color-stop(0.75, transparent), to(transparent));\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.6) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.6) 50%, rgba(255, 255, 255, 0.6) 75%, transparent 75%, transparent);\n      background-image: -moz-linear-gradient(45deg, rgba(255, 255, 255, 0.6) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.6) 50%, rgba(255, 255, 255, 0.6) 75%, transparent 75%, transparent);\n      background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.6) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.6) 50%, rgba(255, 255, 255, 0.6) 75%, transparent 75%, transparent);\n      background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.6) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.6) 50%, rgba(255, 255, 255, 0.6) 75%, transparent 75%, transparent);\n      -webkit-background-size: 40px 40px;\n         -moz-background-size: 40px 40px;\n           -o-background-size: 40px 40px;\n              background-size: 40px 40px;\n    }\n  \"))),\n    ## ---------------------------------------------\n    tags$head(\n      tags$style(HTML(\"hr {border-top: 1px solid #000000;}\"))\n    ),\n    ## ---------------------------------------------\n\n    sidebarLayout(\n      sidebarPanel(\n        wellPanel(\n          style = \"background: lightblue\",\n          fluidRow(\n            column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Date of birth:'), icon(\"question-circle\", class = \"fas  \"))),\n            column(5, align = \"left\", dateInput(\"dob\", NULL, format = \"dd-mm-yyyy\", startview = NULL))\n          ),\n          fluidRow(\n            column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Height (cm):'), icon(\"question-circle\", class = \"fas  \"))),\n            column(5, align = \"left\", numericInput(\"height\", NULL, min = 100, max = 250, step = 1, value = NULL, width = 75))\n          ),\n          fluidRow(\n            column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Weight (kg):'), icon(\"question-circle\", class = \"fas  \"))),\n            column(5, align = \"left\", numericInput(\"weight\", NULL, min = 30, max = 200, step = 1, value = NULL, width = 75))\n          ),\n          fluidRow(\n            column(8, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Family history of diabetes:'), icon(\"question-circle\", class = \"fas  \"))),\n            column(4, align = \"left\", selectInput(\"fhist\", NULL, choices = c(\"\", \"Yes\", \"No\"), selected = NULL, width = 75, selectize = F))\n          ),\n          fluidRow(\n            column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Country of living:'))),\n            column(7, align = \"left\", selectInput(\"country\", NULL, choices = c(\"\", \"India\", \"Kenya\", \"UK\", \"Other\"), selected = F, width = 120, selectize = F))\n          ),\n          uiOutput(\"regionspace\"),\n          uiOutput(\"ethnicityspace\"),\n          fluidRow(\n            column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">HbA1C (%):'), icon(\"question-circle\", class = \"fas  \"))),\n            column(4, align = \"left\", numericInput(\"hba1c\", NULL, min = 2, max = 20, step = 1, value = NULL, width = 75)),\n            # column(3, align=\"left\", radioButtons(\"hba1cMethod\", NULL, width=75, choices=c(\"Venous\", \"POC\"), selected=F)))\n            column(3, align = \"left\", uiOutput(\"Radiohba1c\"))\n          )\n        ),\n        wellPanel(\n          style = \"background: lightblue\",\n          fluidRow(\n            column(9, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Number of births (Parity):'), icon(\"question-circle\", class = \"fas  \"))),\n            column(3, align = \"left\", selectInput(\"parity\", NULL, choices = c(\"\", 0:30), selected = NULL, width = 75))\n          ),\n          hr(),\n          tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Gestational age:'), icon(\"question-circle\", class = \"fas  \")),\n          fluidRow(\n            column(2, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            column(3, align = \"right\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">weeks'))),\n            column(2, align = \"right\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">and'))),\n            column(4, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">days'))),\n            column(2, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            column(4, align = \"left\", selectInput(\"GAweeks\", NULL, choices = c(\"\", 8:15), selected = NULL, width = 75)),\n            column(1, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            column(3, align = \"left\", selectInput(\"GAdays\", NULL, choices = c(\"\", 0:6), selected = NULL, width = 75))\n          ),\n          hr(),\n          tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Blood pressure:'), icon(\"question-circle\", class = \"fas  \")),\n          fluidRow(\n            column(2, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            column(4, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Systolic'))),\n            column(1, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            column(4, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\"> Diastolic'))),\n            column(2, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            # column(4, align=\"left\", numericInput(\"BPsys\", NULL,  min=80, max=210, step=1, value=NULL, width=75)),\n            column(4, align = \"left\", selectInput(\"BPsys\", NULL, choices = c(\"\", 80:210), selected = NULL, width = 75)),\n            column(1, align = \"center\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">'))),\n            #  column(4, align=\"left\", numericInput(\"BPdia\", NULL, min=40, max=120, step=1, value=NULL, width=75))),\n            column(4, align = \"left\", selectInput(\"BPdia\", NULL, choices = c(\"\", 40:210), selected = NULL, width = 75))\n          ),\n          hr(),\n          fluidRow(\n            column(8, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Socio-economic status:'), icon(\"question-circle\", class = \"fas  \"))),\n            column(4, align = \"left\", selectInput(\"ses\", NULL, choices = c(\"\", \"High\", \"Middle\", \"Low\"), selected = NULL, width = 75, selectize = F))\n          ),\n          actionButton(\"GDMButton\", label = \"Calculate\")\n        ),\n      ),\n      mainPanel(\n        # fluidPage(\n        tabsetPanel(\n          tabPanel(\n            \"Home\",\n            h4(\"Instructions:\"),\n            helpText(\"This application gives .....\"),\n            helpText(\"It calculates ....\"),\n            helpText(\".........\"),\n            helpText(\".........\"),\n            helpText(\".........\"),\n            helpText(\".........\"),\n            hr(),\n            uiOutput(\"Output\"),\n            # h4(\"Output:\"),\n            # fluidRow(\n            #    column(2, align=\"center\", tags$p(\"Age\"), verbatimTextOutput(\"v1\"),tags$head(tags$style(HTML(\"#v1 {font-size: 18px;} \")))),\n            #    column(2, align=\"center\", tags$p(\"BMI\"), verbatimTextOutput(\"v2\"),tags$head(tags$style(HTML(\"#v2 {font-size: 18px;} \")))),\n            #    column(4, align=\"center\", tags$p(\"Gestational age\"), verbatimTextOutput(\"v3\"),tags$head(tags$style(HTML(\"#v3 {font-size: 18px;} \")))),\n            #    column(2, align=\"center\", tags$p(\"Risk score\"), verbatimTextOutput(\"v4\"),tags$head(tags$style(HTML(\"#v4 {font-size: 18px;} \"))))\n            #    #column(2, align=\"center\", tags$p(\"Lower limit (\\\\(l\\\\))\"), verbatimTextOutput(\"v5\"),tags$head(tags$style(HTML(\"#v5 {font-size: 18px;} \")))),\n            #    #column(2, align=\"center\", tags$p(\"Upper limit (\\\\(u\\\\))\"), verbatimTextOutput(\"v6\"),tags$head(tags$style(HTML(\"#v6 {font-size: 18px;} \"))))\n            # ),\n            # br(),\n            HTML(\"<div style='height: 150px;'>\"),\n            plotOutput(\"plot\"),\n            HTML(\"<\/div>\"),\n            br(),\n            verbatimTextOutput(\"report\"),\n            uiOutput(\"Button\")\n          ),\n          tabPanel(\"About\", h4(\"To be added\")),\n          tabPanel(\"Citation\", h4(\"Citation:   (To be added once the paper has been published)\")),\n          tabPanel(\n            \"Contact us\", h4(\"Contacts:\"),\n            verbatimTextOutput(\"c1\"),\n            verbatimTextOutput(\"c2\"),\n            verbatimTextOutput(\"c3\")\n          )\n        ) # end tabsetPanel\n        # )\n      ) # end mainPanel\n    ) # end sidebarPanel\n  ), # end ui\n  ####################################################################################################################\n\n  server = function(input, output, session) {\n    session$onSessionEnded(stopApp)\n    output$c1 <- renderText(\"Saravanan Ponnusamy (P.Saravanan@warwick.ac.uk)\")\n    output$c2 <- renderText(\"Yonas G. Weldeselassie (Yonas.Weldeselassie@open.ac.uk)\")\n    output$c3 <- renderText(\"Fadlalla G. Elfadaly (Fadlalla.Elfadaly@open.ac.uk)\")\n\n    observeEvent(c(input$country), {\n      if (input$country == \"Other\") {\n        output$regionspace <- renderUI({\n          fluidRow(\n            column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Region of living:'))),\n            column(7, align = \"left\", selectInput(\"region\", NULL, choices = c(\"\", \"Africa\", \"Europe\", \"Middle East and North Africa\", \"North America and Caribbean\", \"South and Central America\", \"South-East Asia\", \"Western Pacific\"), selected = F, width = 120, selectize = F))\n          )\n        })\n        ##################################\n        observeEvent(c(input$region), {\n          if (input$region == \"Europe\") {\n            EthChoices <- c(\"\", \"White\", \"South-Asia\", \"Other\")\n            output$ethnicityspace <- renderUI({\n              fluidRow(\n                column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Ethnicity:'), icon(\"question-circle\", class = \"fas  \"))),\n                column(7, align = \"left\", selectInput(\"ethnicity\", NULL, choices = EthChoices, selected = F, width = 120, selectize = F))\n              )\n            })\n          } else {\n            if (input$region == \"North America and Caribbean\") {\n              EthChoices <- c(\n                \"\", \"White and European Americans\",\n                \"Hispanic and Latino Americans\",\n                \"Black and African Americans\",\n                \"Asian Americans\",\n                \"Middle Eastern and North African Americans\",\n                \"Native Americans and Alaska Natives\", \"Other\"\n              )\n              output$ethnicityspace <- renderUI({\n                fluidRow(\n                  column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Ethnicity:'), icon(\"question-circle\", class = \"fas  \"))),\n                  column(7, align = \"left\", selectInput(\"ethnicity\", NULL, choices = EthChoices, selected = F, width = 120, selectize = F))\n                )\n              })\n            } else {\n              output$ethnicityspace <- renderUI({})\n            }\n          }\n\n          ###########\n          observeEvent(c(input$hba1c), {\n            #    if(!is.na(input$hba1c) & (input$ethnicity==\"Black\"|input$ethnicity==\"South-Asia\") & !input$country==\"UK\"){\n            if (!is.na(input$hba1c) & !input$region == \"North America and Caribbean\" & !input$region == \"Europe\" & !input$region == \"\" & !input$country == \"UK\") {\n              output$Radiohba1c <- renderUI({\n                radioButtons(\"hba1cMethod\", NULL, width = 75, choices = c(\"Venous\", \"POC\"), selected = \"Venous\")\n              })\n            } else {\n              output$Radiohba1c <- renderUI({})\n            }\n          })\n          ############\n        })\n        #####################################\n      } else {\n        if (input$country == \"UK\") {\n          EthChoices <- c(\"\", \"White\", \"South-Asia\", \"Other\")\n          output$ethnicityspace <- renderUI({\n            fluidRow(\n              column(5, align = \"left\", tags$div(title = \"Help text will appear here when the user hovers over it\", HTML('<p style=\"font-weight: Bold; font-size: 9.5pt\">Ethnicity:'), icon(\"question-circle\", class = \"fas  \"))),\n              column(7, align = \"left\", selectInput(\"ethnicity\", NULL, choices = EthChoices, selected = F, width = 120, selectize = F))\n            )\n          })\n          output$regionspace <- renderUI({})\n          output$Radiohba1c <- renderUI({})\n        } else {\n          output$regionspace <- renderUI({})\n          output$ethnicityspace <- renderUI({})\n\n          if (!is.na(input$hba1c)) {\n            output$Radiohba1c <- renderUI({\n              radioButtons(\"hba1cMethod\", NULL, width = 75, choices = c(\"Venous\", \"POC\"), selected = \"Venous\")\n            })\n          }\n        }\n      }\n    })\n\n\n    observeEvent(input$GDMButton, {\n      BMI <- input$weight / (input$height / 100)^2\n      age <- as.numeric((Sys.Date() - input$dob) / 365.25)\n      gestAge <- as.numeric(input$GAweeks) + as.numeric(input$GAdays) / 7\n      FH <- ifelse(input$fhist == \"Yes\", 1, 0)\n      Model <- \"NA\"\n      SA <- 0\n      OT <- 0\n\n      if (input$parity == \"\" | input$GAweeks == \"\" | input$GAdays == \"\" | is.na(input$BPsys) | is.na(input$BPdia) | input$ses == \"\") {\n        # Kenya\n        if (input$ethnicity == \"Black\" & !input$country == \"UK\" & is.na(input$hba1c)) {\n          Model <- \"M1B_Kenya\"\n        } else {\n          if (input$ethnicity == \"Black\" & !input$country == \"UK\" & !is.na(input$hba1c)) {\n            if (input$hba1cMethod == \"Venous\") Model <- \"M2_Kenya\"\n            if (input$hba1cMethod == \"POC\") Model <- \"M2_KenyaPOC\"\n          }\n          # India\n          if (input$ethnicity == \"South-Asia\" & !input$country == \"UK\" & is.na(input$hba1c)) {\n            Model <- \"M1B_India\"\n          } else {\n            if (input$ethnicity == \"South-Asia\" & !input$country == \"UK\" & !is.na(input$hba1c)) {\n              if (input$hba1cMethod == \"Venous\") Model <- \"M2_India\"\n              if (input$hba1cMethod == \"POC\") Model <- \"M2_IndiaPOC\"\n            }\n            # UK\n            if (input$ethnicity == \"White\" & is.na(input$hba1c)) {\n              Model <- \"M1B_UK\"\n            } else {\n              if (input$ethnicity == \"White\" & !is.na(input$hba1c)) Model <- \"M2_UK\"\n              # if(is.null(input$ethnicity)) Warning1<-\"Please select an ethnicity\"\n\n\n              if (input$ethnicity == \"Other\" & is.na(input$hba1c)) {\n                Model <- \"M1B_UK\"\n                SA <- 0\n                OT <- 1\n              } else {\n                if (input$ethnicity == \"Other\" & !is.na(input$hba1c)) {\n                  Model <- \"M2_UK\"\n                  SA <- 0\n                  OT <- 1\n                }\n                # if(is.null(input$ethnicity)) Warning1<-\"Please select an ethnicity\"\n\n                if (input$ethnicity == \"South-Asia\" & input$country == \"UK\" & is.na(input$hba1c)) {\n                  Model <- \"M1B_UK\"\n                  SA <- 1\n                  OT <- 0\n                } else {\n                  if (input$ethnicity == \"South-Asia\" & input$country == \"UK\" & !is.na(input$hba1c)) {\n                    Model <- \"M2_UK\"\n                    SA <- 1\n                    OT <- 0\n                  }\n\n                  if (input$ethnicity == \"Black\" & input$country == \"UK\" & is.na(input$hba1c)) {\n                    Model <- \"M1B_UK\"\n                    SA <- 0\n                    OT <- 1\n                  } else {\n                    if (input$ethnicity == \"Black\" & input$country == \"UK\" & !is.na(input$hba1c)) {\n                      Model <- \"M2_UK\"\n                      SA <- 0\n                      OT <- 1\n                    } else {\n                      if (is.null(input$ethnicity)) {\n                        Warning1 <- \"Please select an ethnicity\"\n                        print(Warning1)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        print(\"whatever\")\n      }\n\n\n      # Kenya\n      if (Model == \"M1B_Kenya\") {\n        riskScore <- plogis(-7.82 + 0.047 * age + 0.114 * BMI + 0.492 * FH)\n        threshold2 <- 0.086\n        threshold1 <- 0.020\n      }\n      if (Model == \"M2_Kenya\") {\n        riskScore <- plogis(-15.057 + 1.596 * input$hba1c + 0.025 * age + 0.085 * BMI + 0.424 * FH)\n        threshold2 <- 0.100\n        threshold1 <- 0.022\n      }\n      if (Model == \"M2_KenyaPOC\") {\n        riskScore <- plogis(-10.703 + 0.759 * input$hba1c + 0.035 * age + 0.083 * BMI + 0.399 * FH)\n        threshold2 <- 0.094\n        threshold1 <- 0.0238\n      }\n      # India\n      if (Model == \"M1B_India\") {\n        riskScore <- plogis(-2.828 + 0.042 * age + 0.00534 * BMI + 0.319 * FH)\n        threshold2 <- 0.224\n        threshold1 <- 0.150\n      }\n      if (Model == \"M2_India\") {\n        riskScore <- plogis(-5.213 + 0.518 * input$hba1c + 0.037 * age + 0.0003 * BMI + 0.303 * FH)\n        threshold2 <- 0.229\n        threshold1 <- 0.164\n      }\n      if (Model == \"M2_IndiaPOC\") {\n        riskScore <- plogis(-3.868 + 0.225 * input$hba1c + 0.034 * age + 0.001 * BMI + 0.252 * FH)\n        threshold2 <- 0.228\n        threshold1 <- 0.167\n      }\n      # UK\n      if (Model == \"M1B_UK\") {\n        riskScore <- plogis(-5.66 + 0.065 * age + 0.057 * BMI + 0.136 * FH + 0.5 * SA + 0.5 * OT)\n        threshold2 <- 0.218\n        threshold1 <- 0.113\n      } # Obtain new coefficients and thresholds\n      if (Model == \"M2_UK\") {\n        riskScore <- plogis(-15.402 + 2.022 * input$hba1c + 0.042 * age + 0.0490 * BMI + 0.063 * FH + 0.5 * SA + 0.5 * OT)\n        threshold2 <- 0.237\n        threshold1 <- 0.107\n      } # Obtain new coefficients and thresholds\n\n      WMessage <- ifelse(riskScore >= threshold2, \"GDM\", ifelse(riskScore < threshold1, \"Free\", \"OGTT\"))\n\n\n      output$Output <- renderUI({\n        fluidPage(\n          h4(\"Output:\"),\n          fluidRow(\n            column(2, align = \"center\", tags$p(\"Age\"), verbatimTextOutput(\"v1\"), tags$head(tags$style(HTML(\"#v1 {font-size: 18px;} \")))),\n            column(2, align = \"center\", tags$p(\"BMI\"), verbatimTextOutput(\"v2\"), tags$head(tags$style(HTML(\"#v2 {font-size: 18px;} \")))),\n            # column(4, align=\"center\", tags$p(\"Gestational age\"), verbatimTextOutput(\"v3\"),tags$head(tags$style(HTML(\"#v3 {font-size: 18px;} \")))),\n            column(2, align = \"center\", tags$p(\"Risk score\"), verbatimTextOutput(\"v4\"), tags$head(tags$style(HTML(\"#v4 {font-size: 18px;} \"))))\n            # column(2, align=\"center\", tags$p(\"Lower limit (\\\\(l\\\\))\"), verbatimTextOutput(\"v5\"),tags$head(tags$style(HTML(\"#v5 {font-size: 18px;} \")))),\n            # column(2, align=\"center\", tags$p(\"Upper limit (\\\\(u\\\\))\"), verbatimTextOutput(\"v6\"),tags$head(tags$style(HTML(\"#v6 {font-size: 18px;} \"))))\n          ),\n          br()\n        )\n      })\n\n      output$v1 <- renderText({\n        round(age)\n      })\n      output$v2 <- renderText({\n        round(BMI, 2)\n      })\n      output$v3 <- renderText({\n        paste(input$GAweeks, \"weeks \", \"+\", input$GAdays, \" days\", sep = \"\")\n      })\n      output$v4 <- renderText({\n        paste(round(riskScore * 100, 1), \"%\", sep = \"\")\n      }) # ; #output$v5<-renderText({round(lower,4)}); output$v6<-renderText({round(upper,4)})\n\n      print(Model)\n      print(WMessage)\n      print(c(SA, OT))\n\n      WMessageText <- ifelse(WMessage == \"GDM\", \"Recommend treatement for GDM\", ifelse(WMessage == \"OGTT\", \"Recommend Oral Glucose Tolerance Test (OGTT)\", \"There is a low risk of developing GDM\"))\n      WMessageColor <- ifelse(WMessage == \"GDM\", \"red\", ifelse(WMessage == \"OGTT\", \"orange\", \"green\"))\n\n      text1 <- c(\n        \"  THIS APPLICATION IMPLEMENTS A METHOD FOR CALCULATING THE RISK SCORE OF DEVELOPING GDM .....\",\n        \" THE METHOD IS FOUND IN THE FOLLOWING PAPER: Saravanan et al (2024)\",\n        \" 'Early pregnancy HbA1c as the first screening test for gestational diabetes:\",\n        \" results from three prospective cohorts'.\",\n        \"\",\n        \"INPUTS:\",\n        paste(\"Age       = \", round(age, 0)),\n        paste(\"BMI       = \", round(BMI, 2)),\n        paste(\"Family history of diabetes = \", input$fhist),\n        paste(\"Ethnicity = \", input$ethnicity),\n        if (!is.na(input$hba1c)) {\n          paste(\"HbA1C     = \", input$hba1c)\n        },\n\n        # paste(\"Gestational age = \", as.numeric(input$GAweeks), \" and \", as.numeric(input$GAdays)),\n        \"\",\n        \"OUTPUTS:\",\n        paste(\"The risk of GDM is: \", round(riskScore * 100, 1), \"%.\", sep = \"\")\n\n        # paste(\"The lower limit of the \",BMI,\"% locally correct confidence interval = \", round(BMI,4)),\n\n        # paste(\"The upper limit of the \",BMI,\"% locally correct confidence interval = \", round(BMI,4))\n      )\n\n      output$report <- renderText({\n        paste(text1, collaps = \"\\n\")\n      })\n\n      text2 <- c(\n        \"\",\n        \"  THIS APPLICATION IMPLEMENTS A METHOD FOR CALCULATING THE RISK SCORE OF DEVELOPING GDM .....\",\n        \" THE METHOD IS FOUND IN THE FOLLOWING PAPER: Saravanan et al (2024)\",\n        \" 'Early pregnancy HbA1c as the first screening test for gestational diabetes:\",\n        \" results from three prospective cohorts'.\",\n        \"\",\n        \"INPUTS:\",\n        paste(\"Age       = \", round(age, 0)),\n        paste(\"BMI       = \", round(BMI, 2)),\n        paste(\"Family history of diabetes = \", input$fhist),\n        paste(\"Ethnicity = \", input$ethnicity),\n        if (!is.na(input$hba1c)) {\n          paste(\"HbA1C     = \", input$hba1c)\n        },\n\n        # paste(\"Gestational age = \", as.numeric(input$GAweeks), \" and \", as.numeric(input$GAdays)),\n        \"\",\n        \"OUTPUTS:\",\n        paste(\"The risk of GDM is: \", round(riskScore * 100, 1), \"%.\")\n\n        # paste(\"The lower limit of the \",BMI,\"% locally correct confidence interval = \", round(BMI,4)),\n\n        # paste(\"The upper limit of the \",BMI,\"% locally correct confidence interval = \", round(BMI,4))\n      )\n\n      output$Button <- renderUI({\n        fluidPage(\n          downloadButton(\"downloadReport\", \"Save as a text file\")\n        )\n      })\n\n      output$downloadReport <- downloadHandler(\n        filename = paste(\"GDM\", Sys.time(), \".txt\"),\n        content = function(file) {\n          # write.table(text, file)\n          writeLines(paste(text2), file)\n        }\n      )\n\n\n\n      output$plot <- renderPlot(width = \"auto\", height = 165, {\n        par(mar = c(4, 1, 1, 1))\n        plot(0, 0, xlim = c(0, 100), ylim = c(0, 1), axes = F, ann = F, type = \"l\", cex = 3, col = \"purple\", cex.lab = 3)\n        axis(1, at = c(0, 20, 40, 60, 80, 100), labels = c(\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"), cex.axis = 1.5)\n        mtext(side = 1, text = \"Risk score\", line = 2.5, cex = 1.75)\n        # mtext(side=1, text=\"p\", font=3, family=\"serif\", line=2.5, cex=2.5)\n        lines(c(0, round(threshold1 * 100, 1)), c(-0.02, -0.02), col = \"green\", cex = 3, lwd = 6)\n        lines(c(round(threshold1 * 100, 1), round(threshold2 * 100, 1)), c(-0.02, -0.02), col = \"orange\", cex = 3, lwd = 6)\n        lines(c(round(threshold2 * 100, 1), 100), c(-0.02, -0.02), col = \"red\", cex = 3, lwd = 6)\n\n        arrows(\n          x0 = round(riskScore * 100, 1), x1 = round(riskScore * 100, 1), y1 = 0.04, y0 = 0.5, col = WMessageColor, length = 0.2,\n          angle = 20, cex = 2.5, lwd = 3\n        )\n        # points(c(0.2,0.9), c(0,0),pch=c(\"[\",\"]\"),xpd=NA,col=\"blue\",cex=3 )\n        # points(0, 0,pch=\"[\",xpd=NA,col=WMessageColor,cex=3 )\n        # points(round(riskScore*100,1),0.12,pch=\"V\",xpd=NA,col=WMessageColor,cex=2 )   #pch=16\n\n        text(50, 0.9, paste0(WMessageText), cex = 1.8, col = WMessageColor)\n\n\n        # text(0.2,0.45,paste0(\"\",round(0.2,4)),cex=1.5)\n        # text(0.9,0.45,paste0(\"\",round(0.9,4)),cex=1.5)\n      })\n    })\n  } # end of server\n) # end of shinyapp","type":"text"}]
